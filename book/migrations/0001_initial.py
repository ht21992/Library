# Generated by Django 4.1.1 on 2023-09-26 05:48

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Character",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Characters",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Genere",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "Generes",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=500, verbose_name="title")),
                ("author", models.CharField(max_length=500, verbose_name="author")),
                (
                    "publisher",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="publisher"
                    ),
                ),
                (
                    "series",
                    models.CharField(blank=True, max_length=500, verbose_name="series"),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True, max_length=500, verbose_name="language"
                    ),
                ),
                (
                    "isbn",
                    models.CharField(blank=True, max_length=500, verbose_name="isbn"),
                ),
                ("description", models.TextField(verbose_name="description")),
                (
                    "rating",
                    models.FloatField(
                        default=0,
                        validators=[
                            django.core.validators.MaxValueValidator(5),
                            django.core.validators.MinValueValidator(0),
                        ],
                    ),
                ),
                ("pages", models.IntegerField(blank=True, default=0)),
                ("price", models.DecimalField(decimal_places=2, max_digits=19)),
                ("image", models.ImageField(blank=True, null=True, upload_to="books/")),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "characters",
                    models.ManyToManyField(
                        blank=True, to="book.character", verbose_name="characters"
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_created_books",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "geners",
                    models.ManyToManyField(
                        blank=True, to="book.genere", verbose_name="generes"
                    ),
                ),
            ],
            options={
                "verbose_name": "book",
                "verbose_name_plural": "books",
            },
        ),
    ]
